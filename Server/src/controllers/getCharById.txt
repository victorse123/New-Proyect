const axios = require ("axios");
const { log } = require("console");
const express =require ("express")
const app =express();


    app.use(express.json())

    app.get('/character/:id',(req, res)=>{
        const id = req.params.id;        
        console.log(id);
       
    if(!isNaN(id)){
       
    axios(`https://rickandmortyapi.com/api/character/${id}`)
    .then(({data})=>{
        
        
            const character = {
                id: id,
                name: data?.name,
                gender: data?.gender, 
                type: data?.type,
                location:data?.location,
                created:data?.created,
                origin: data?.origin, 
                image: data?.image, 
                species: data?.species,
                status: data?.status
            } 
            
            
          
          res.status(200).json(character);
    
        })
                
        .catch((error)=>{
         
            res.status(500).send(error.message)
        })
    }else{
        
        axios(`https://rickandmortyapi.com/api/character/?name=${id}`)
        .then(({data})=>{
            

            if(data.results && data.results.length > 0){
              
                const personaje=  data.results[0]
              const character={
                                    
              
                    id: personaje?.name,
                    name: personaje?.name,
                    gender: personaje?.gender, 
                    species: personaje?.species,
                    type:personaje?.type,
                    origin: personaje.origin?.name,
                    location: personaje.location?.name,
                    created: personaje?.created, 
                    image: personaje?.image, 
                    status: personaje?.status
            
        } 
            
              res.status(200).json(character);
        
            }else{
                res.status(404).json({error:"no se encontraron personajes con este nombre"})
            }
            })  
                    
            .catch((error)=>{
                res.status(500).send(error.message);
            })

    }
    
})
const port = process.env.PORT || 3001;
app.listen(port, ()=>console.log(`servidor en el puerto ${port}`))